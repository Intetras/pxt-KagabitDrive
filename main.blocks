<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id=")IJi.5?W[-9nhv59QXh*" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="_y5k(dLepiz{UA(O[YDd" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace kagabitdrive {" line1="" line2="    export enum direction {" line3="        //% block=&quot;前&quot;" line4="        Forward = 1," line5="        //% block=&quot;後&quot;" line6="        Back = 0" line7="    }" line8="" line9="    export enum brakeValue {" line10="        //% block=&quot;急ブレーキ&quot;" line11="        On = 1," line12="        //% block=&quot;ゆっくりブレーキ&quot;" line13="        Off = 0" line14="    }" line15="" line16="    let nowPower = [0, 0];" line17="    let nowBrake = brakeValue.Off" line18="    DoubleMotor(0, 0);" line19="" line20="    //% group=&quot;DCモーター&quot;" line21="    //% blockId=double_DCmotorAnalog_time" line22="    //% block=block=&quot;モーター制御 Lモーター %powerL Rモーター %powerR 時間 %msec&quot;" line23="    //% powerR.min=-1023 powerR.max=1023" line24="    //% powerL.min=-1023 powerL.max=1023" line25="    //% msec.min=0" line26="    export function DoubleMotorTime(powerL: number, powerR: number,msec:number) {" line27="" line28="        LmotorA(powerL)" line29="        RmotorA(powerR)" line30="" line31="    }" line32="    //% group=&quot;DCモーター&quot;" line33="    //% blockId=R_DCmotorAnalog" line34="    //% block=&quot;モーター制御 Rモーター%powerR&quot;" line35="    //% powerR.min=-1023 powerR.max=1023" line36="    export function RmotorA(powerR: number) {" line37="" line38="        if (powerR &gt; 0) {" line39="            pins.digitalWritePin(DigitalPin.P15, direction.Forward);" line40="            pins.analogWritePin(AnalogPin.P16, Math.abs(powerR));" line41="        } else if (powerR &lt; 0) {" line42="            pins.digitalWritePin(DigitalPin.P15, direction.Back);" line43="            pins.analogWritePin(AnalogPin.P16, Math.abs(powerR));" line44="        } else {" line45="            //停止" line46="            if (nowBrake == brakeValue.On) {" line47="                //ブレーキ処理Onの場合" line48="                if (nowPower[1] &gt; 0) {" line49="                    pins.digitalWritePin(DigitalPin.P15, direction.Back);" line50="                    pins.analogWritePin(AnalogPin.P16, Math.abs(nowPower[1]));" line51="                    basic.pause(30);" line52="                } else if (nowPower[1] &lt; 0) {" line53="                    pins.digitalWritePin(DigitalPin.P15, direction.Forward);" line54="                    pins.analogWritePin(AnalogPin.P16, Math.abs(nowPower[1]));" line55="                    basic.pause(30);" line56="                }" line57="            }" line58="" line59="            pins.analogWritePin(AnalogPin.P16, 0);" line60="" line61="        }" line62="        nowPower[1] = powerR;" line63="" line64="    }" line65="" line66="    //% group=&quot;DCモーター&quot;" line67="    //% blockId=L_DCmotorAnalog" line68="    //% block=&quot;モーター制御 Lモーター%powerL&quot;" line69="    //% powerL.min=-1023 powerL.max=1023" line70="    export function LmotorA(powerL: number) {" line71="" line72="        if (powerL &gt; 0) {" line73="            pins.digitalWritePin(DigitalPin.P13, direction.Forward);" line74="            pins.analogWritePin(AnalogPin.P14, Math.abs(powerL));" line75="        } else if (powerL &lt; 0) {" line76="            pins.digitalWritePin(DigitalPin.P13, direction.Back);" line77="            pins.analogWritePin(AnalogPin.P14, Math.abs(powerL));" line78="        } else {" line79="            //停止" line80="            if (nowBrake == brakeValue.On) {" line81="                if (nowPower[0] &gt; 0) {" line82="                    pins.digitalWritePin(DigitalPin.P13, direction.Back);" line83="                    pins.analogWritePin(AnalogPin.P14, Math.abs(nowPower[0]));" line84="                    basic.pause(30);" line85="                } else if (nowPower[0] &lt; 0) {" line86="                    pins.digitalWritePin(DigitalPin.P13, direction.Forward);" line87="                    pins.analogWritePin(AnalogPin.P14, Math.abs(nowPower[0]));" line88="                    basic.pause(30);" line89="                }" line90="            }" line91="            pins.analogWritePin(AnalogPin.P14, 0);" line92="" line93="        }" line94="" line95="        nowPower[0] = powerL;" line96="" line97="    }" line98="" line99="    //% group=&quot;DCモーター&quot;" line100="    //% blockId=&quot;Double_DCmotorAnalog&quot;" line101="    //% block=&quot;モーター制御 Lモーター %powerL Rモーター %powerR&quot;" line102="    //% powerL.min=-1023 powerL.max=1023" line103="    //% powerR.min=-1023 powerR.max=1023" line104="    export function DoubleMotor(powerL: number, powerR: number) {" line105="" line106="        LmotorA(powerL)" line107="        RmotorA(powerR)" line108="" line109="    }" line110="" line111="    //% group=&quot;DCモーター&quot;" line112="    //% blockId=&quot;Set_brake&quot;" line113="    //% block=&quot;停まり方 %brake&quot;" line114="    export function setBrake(brake: brakeValue) {" line115="        nowBrake = brake;" line116="        //basic.showNumber(nowBrake)" line117="    }" line118="" line119="    //% group=&quot;サーボモーター&quot;" line120="    //% blockId=R_Servo_Angle block=&quot;Rサーボの角度%angle&quot;" line121="    //% angle.min=0 angle.max=180" line122="    export function RServoAngle(angle: number) {" line123="" line124="        pins.servoWritePin(AnalogPin.P9, angle)" line125="    }" line126="" line127="    //% group=&quot;サーボモーター&quot;" line128="    //% blockId=L_Servo_Angle block=&quot;Lサーボの角度%angle&quot;" line129="    //% angle.min=0 angle.max=180" line130="    export function LServoAngle(angle: number) {" line131="" line132="        pins.servoWritePin(AnalogPin.P7, angle)" line133="    }" line134="" line135="}" numlines="136"></mutation></block></statement></block></xml>