<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id=":Q#9}(21~m@$4vg/gy:u" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="s^t[Xt^EG3N|aF~1dztD" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace kagabitdrive {" line1="" line2="    export enum direction {" line3="        //% block=&quot;前&quot;" line4="        Forward = 1," line5="        //% block=&quot;後&quot;" line6="        Back = 0" line7="    }" line8="" line9="    export enum brakeValue {" line10="        //% block=&quot;急ブレーキ&quot;" line11="        On = 1," line12="        //% block=&quot;ゆっくりブレーキ&quot;" line13="        Off = 0" line14="    }" line15="" line16="    let nowPower = [0, 0];" line17="    let nowBrake = brakeValue.Off" line18="    DoubleMotor(0, 0);" line19="" line20="" line21="    //% group=&quot;ロボットカー制御&quot;" line22="    //% blockId=&quot;double_DCmotorAnalog_time2&quot;" line23="    //% block=&quot;モーターの強さ2 L %powerL R %powerR で %msec 秒動く&quot;" line24="    //% powerR.min=-1023 powerR.max=1023" line25="    //% powerL.min=-1023 powerL.max=1023" line26="    //% msec.min=0" line27="    export function DoubleMotorTime2(powerL: number, powerR: number, sec: number) {" line28="" line29="        if (sec &lt; 0) {" line30="            sec = 0" line31="        }" line32="        let msec = sec * 1000" line33="" line34="        LmotorA(powerL * 0.75)" line35="        RmotorA(powerR * 0.75)" line36="        basic.pause(40)" line37="        " line38="        LmotorA(powerL * 0.80)" line39="        RmotorA(powerR * 0.80)" line40="        basic.pause(40)" line41="" line42="        LmotorA(powerL * 0.85)" line43="        RmotorA(powerR * 0.85)" line44="        basic.pause(40)" line45="" line46="        LmotorA(powerL * 0.90)" line47="        RmotorA(powerR * 0.90)" line48="        basic.pause(40)" line49="" line50="        LmotorA(powerL * 0.95)" line51="        RmotorA(powerR * 0.95)" line52="        basic.pause(40)" line53="" line54="        LmotorA(powerL)" line55="        RmotorA(powerR)" line56="        basic.pause(msec)" line57="" line58="        LmotorA(powerL * 0)" line59="        RmotorA(powerR * 0.95)" line60="        basic.pause(40)" line61="" line62="        LmotorA(powerL * 0)" line63="        RmotorA(powerR * 0.90)" line64="        basic.pause(40)" line65="" line66="        LmotorA(powerL * 0)" line67="        RmotorA(powerR * 0.85)" line68="        basic.pause(40)" line69="" line70="        LmotorA(powerL * 0)" line71="        RmotorA(powerR * 0.80)" line72="        basic.pause(40)" line73="" line74="        LmotorA(powerL * 0)" line75="        RmotorA(powerR * 0.75)" line76="        basic.pause(40)" line77="" line78="        LmotorA(0)" line79="        RmotorA(0)" line80="        basic.pause(40)" line81="    }" line82="" line83="    //% group=&quot;ロボットカー制御&quot;" line84="    //% blockId=&quot;double_DCmotorAnalog_time&quot;" line85="    //% block=&quot;モーターの強さ L %powerL R %powerR で %msec 秒動く&quot;" line86="    //% powerR.min=-1023 powerR.max=1023" line87="    //% powerL.min=-1023 powerL.max=1023" line88="    //% msec.min=0" line89="    export function DoubleMotorTime(powerL: number, powerR: number, sec: number) {" line90="" line91="        if (sec &lt; 0) {" line92="            sec = 0" line93="        }" line94="        let msec2 = sec * 1000" line95="" line96="        LmotorA(powerL*0.7)" line97="        RmotorA(powerR*0.7)" line98="        basic.pause(20)" line99="" line100="        LmotorA(powerL * 0.8)" line101="        RmotorA(powerR * 0.8)" line102="        basic.pause(20)" line103="" line104="        LmotorA(powerL * 0.9)" line105="        RmotorA(powerR * 0.9)" line106="        basic.pause(20)" line107="" line108="        LmotorA(powerL)" line109="        RmotorA(powerR)" line110="        basic.pause(msec2)" line111="" line112="        LmotorA(powerL * 0.9)" line113="        RmotorA(powerR * 0.9)" line114="        basic.pause(20)" line115="" line116="        LmotorA(powerL * 0.8)" line117="        RmotorA(powerR * 0.8)" line118="        basic.pause(20)" line119="" line120="        LmotorA(powerL * 0.7)" line121="        RmotorA(powerR * 0.7)" line122="        basic.pause(20)" line123="" line124="        LmotorA(0)" line125="        RmotorA(0)" line126="        basic.pause(20)" line127="    }" line128="" line129="    //% group=&quot;DCモーター&quot;" line130="    //% blockId=&quot;sleep_sec&quot;" line131="    //% block=&quot;動く %msec 秒&quot;" line132="    //% msec.min=0" line133="    export function SleepSec(sec: number) {" line134="        let msec3 = sec * 1000" line135="        basic.pause(msec3)" line136="    }" line137="" line138="    //% group=&quot;DCモーター&quot;" line139="    //% blockId=R_DCmotorAnalog" line140="    //% block=&quot;モーターの強さ R %powerR&quot;" line141="    //% powerR.min=-1023 powerR.max=1023" line142="    export function RmotorA(powerR: number) {" line143="" line144="        if (powerR &gt; 1023){" line145="            powerR = 1023" line146="        } else if (powerR &lt; -1023){" line147="            powerR = -1023" line148="        }" line149="" line150="        if (powerR &gt; 0) {" line151="            pins.digitalWritePin(DigitalPin.P15, direction.Forward);" line152="            pins.analogWritePin(AnalogPin.P16, Math.abs(powerR));" line153="        } else if (powerR &lt; 0) {" line154="            pins.digitalWritePin(DigitalPin.P15, direction.Back);" line155="            pins.analogWritePin(AnalogPin.P16, Math.abs(powerR));" line156="        } else {" line157="            //停止" line158="            if (nowBrake == brakeValue.On) {" line159="                //ブレーキ処理Onの場合" line160="                if (nowPower[1] &gt; 0) {" line161="                    pins.digitalWritePin(DigitalPin.P15, direction.Back);" line162="                    pins.analogWritePin(AnalogPin.P16, Math.abs(nowPower[1]));" line163="                    basic.pause(30);" line164="                } else if (nowPower[1] &lt; 0) {" line165="                    pins.digitalWritePin(DigitalPin.P15, direction.Forward);" line166="                    pins.analogWritePin(AnalogPin.P16, Math.abs(nowPower[1]));" line167="                    basic.pause(30);" line168="                }" line169="            }" line170="" line171="            pins.analogWritePin(AnalogPin.P16, 0);" line172="" line173="        }" line174="        nowPower[1] = powerR;" line175="" line176="    }" line177="" line178="    //% group=&quot;DCモーター&quot;" line179="    //% blockId=L_DCmotorAnalog" line180="    //% block=&quot;モーターの強さ L %powerL&quot;" line181="    //% powerL.min=-1023 powerL.max=1023" line182="    export function LmotorA(powerL: number) {" line183="" line184="        if (powerL &gt; 1023) {" line185="            powerL = 1023" line186="        } else if (powerL &lt; -1023) {" line187="            powerL = -1023" line188="        }" line189="" line190="        if (powerL &gt; 0) {" line191="            pins.digitalWritePin(DigitalPin.P13, direction.Forward);" line192="            pins.analogWritePin(AnalogPin.P14, Math.abs(powerL));" line193="        } else if (powerL &lt; 0) {" line194="            pins.digitalWritePin(DigitalPin.P13, direction.Back);" line195="            pins.analogWritePin(AnalogPin.P14, Math.abs(powerL));" line196="        } else {" line197="            //停止" line198="            if (nowBrake == brakeValue.On) {" line199="                if (nowPower[0] &gt; 0) {" line200="                    pins.digitalWritePin(DigitalPin.P13, direction.Back);" line201="                    pins.analogWritePin(AnalogPin.P14, Math.abs(nowPower[0]));" line202="                    basic.pause(30);" line203="                } else if (nowPower[0] &lt; 0) {" line204="                    pins.digitalWritePin(DigitalPin.P13, direction.Forward);" line205="                    pins.analogWritePin(AnalogPin.P14, Math.abs(nowPower[0]));" line206="                    basic.pause(30);" line207="                }" line208="            }" line209="            pins.analogWritePin(AnalogPin.P14, 0);" line210="" line211="        }" line212="" line213="        nowPower[0] = powerL;" line214="" line215="    }" line216="" line217="    //% group=&quot;DCモーター&quot;" line218="    //% blockId=&quot;Double_DCmotorAnalog&quot;" line219="    //% block=&quot;モーターの強さ L %powerL R %powerR&quot;" line220="    //% powerL.min=-1023 powerL.max=1023" line221="    //% powerR.min=-1023 powerR.max=1023" line222="    export function DoubleMotor(powerL: number, powerR: number) {" line223="" line224="        LmotorA(powerL)" line225="        RmotorA(powerR)" line226="" line227="    }" line228="" line229="    //% group=&quot;サーボモーター&quot;" line230="    //% blockId=R_Servo_Angle block=&quot;サーボの角度 R %angle&quot;" line231="    //% angle.min=0 angle.max=180" line232="    export function RServoAngle(angle: number) {" line233="" line234="        pins.servoWritePin(AnalogPin.P9, angle)" line235="    }" line236="" line237="    //% group=&quot;サーボモーター&quot;" line238="    //% blockId=L_Servo_Angle block=&quot;サーボの角度 L %angle&quot;" line239="    //% angle.min=0 angle.max=180" line240="    export function LServoAngle(angle: number) {" line241="" line242="        pins.servoWritePin(AnalogPin.P7, angle)" line243="    }" line244="" line245="    //% group=&quot;Groveラインファインダ&quot;" line246="    //% blockId=Line_black block=&quot;黒色&quot;" line247="    export function isBlack():number{" line248="        return 1;" line249="    }" line250="" line251="    //% group=&quot;Groveラインファインダ&quot;" line252="    //% blockId=Line_White block=&quot;白色&quot;" line253="    export function isWhite(): number {" line254="        return 0;" line255="    }" line256="}" numlines="257"></mutation></block></statement></block></xml>